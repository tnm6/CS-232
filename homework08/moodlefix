# Shell script to unzip homework files for grading and reformat to shell-
# friendly names.
# 
# CS-232, Professor Victor Norman, Calvin University
# Student: Nathan Meyer (tnm6)

#!/bin/bash
LANG=C

removespaces() {
  echo "$1" | sed -e "s/ //g"
}

removetail() {
  # Removes tail of a string based on given regexes of head and tail
  echo "$1" | sed -E "s/^($2)$3$/\1/"
}

log() {
  if [ "$1" = true ]; then
    echo $2
  fi
}

error() {
  echo $1
  exit 1
}

# Check for arguments and see if verbose flag is set (must be first arg)
verbose=false
if [ $# -eq 1 ]; then
  inputfile=$1
elif [ $# -eq 2 ]; then
  case $1 in
  "-v" | "--verbose")
    verbose=true
    ;;
  *)
    error "Invalid arguments. Usage: ./moodlefix (-v/--verbose) <filename>"
    ;;
  esac
  inputfile=$2
else
  error "Invalid number of arguments. Usage: ./moodlefix [-v/--verbose] <filename>"
fi

# Check if file exists
if [ -f "$inputfile" ]; then
  # Format new directory name for unzipping
  newdir=$(removespaces "$inputfile")
  newdir=$(removetail $newdir "^.*" "-[0-9]*\.zip")
else
  error "File '$inputfile' not found. Exiting."
fi

# Make sure directory does not already exist
if [ ! -d $newdir ]; then
  log $verbose "Unzipping '$inputfile' to '$newdir'..."
  unzip -q "$inputfile" -d $newdir || error "Unzipping '$inputfile' failed. Exiting."
else
  error "Directory '$newdir' already exists. Exiting."
fi

cd $newdir

# Iterate through each directory
for dir in */; do
  # Format new directory name with no spaces, keep name only
  newdir=$(removespaces "$dir")
  newdir=$(removetail "$newdir" "[a-zA-Z]*" "_.*")

  # Make the new directory if it does not yet exist
  if [ ! -d $newdir ]; then
    log $verbose "Making directory '$newdir'..."
    mkdir $newdir
  fi

  cd "$dir"

  # Iterate through each file in the student directories
  for file in *; do
    # Remove spaces for file's new name
    newfilename=$(removespaces "$file")

    # This if-statement from: https://stackoverflow.com/a/407229
    # Checks if file is a zip, unzips if so
    if [ ${file: -4} == ".zip" ]; then
      # Remove .zip
      newfilename=$(removetail $newfilename ".*" "\.zip")
      
      log $verbose "Unzipping '$file' to '../$newdir/$newfilename'..."
      unzip -q $file -d "../$newdir/$newfilename" || error "Unzipping '$file' failed. Exiting."

      # Delete original zipped file
      rm "$file" || error "Removing '$file' failed. Exiting."
    else
      log $verbose "Moving '$file' to '../$newdir/$newfilename'..."
      mv "$file" "../$newdir/$newfilename" || error "Moving '$file' failed. Exiting."
    fi
  done

  cd ..

  log $verbose "Deleting directory '$dir'..."
  # Includes redundant check for removing non-empty directory (shouldn't happen)
  rmdir "$dir" || error "Removing directory '$dir' failed. Exiting."
done
